// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  email     String      @unique
  name      String?
  posts     Post[]  
	comments  Comment[]
  role      String      @default("user")

  @@allow('read', true)
}

model Post {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  content     String
  published   Boolean   @default(false)
  viewCount   Int       @default(0)
	comments    Comment[]

  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int  

  @@allow('read', published && auth() != null)
  @@allow('all', auth() == author)
}

model Comment {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  content     String

  post        Post      @relation(fields: [postId], references: [id])
  postId      Int

  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int

  children    Comment[] @relation("ParentCommentToChildComments")

  parent      Comment?  @relation("ParentCommentToChildComments", fields: [parentId], references: [id])
  parentId    Int?

  @@allow('create', post.published && auth() != null)
  @@allow('read', true)
  @@allow('update', auth() == author)
  @@allow('delete', auth() == author || auth() == post.author)
  
}

